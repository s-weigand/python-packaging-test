name: Tests

on: [push, pull_request]

jobs:
  lint:
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
      - name: Lint with flake8
        run: |
          flake8 python_packaging_test
      # - uses: wrboyce/python-lint-action@master

  docs:
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install .
          pip install -r requirements_dev.txt
      - name: Build docs
        run: |
          make --directory=docs clean html

  docs-links:
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install .
          pip install -r requirements_dev.txt
      - name: Check doc links
        run: |
          make --directory=docs clean linkcheck

  test:
    runs-on: ${{ matrix.os }}
    needs: [lint, docs]
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        python-version: [3.6, 3.7, 3.8]

    steps:
      - uses: actions/checkout@v1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install -r requirements_dev.txt
          pip install -e .
      - name: Run tests
        run: |
          py.test --cov=./ --cov-report term --cov-report xml --cov-config .coveragerc tests
      - name: Codecov Upload
        continue-on-error: true
        uses: codecov/codecov-action@v1
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: ./coverage.xml
      - name: Test conditional
        if: matrix.python-version==3.8
        run: echo 'Python 3.8 used'
      - name: Print env
        if: matrix.os=='ubuntu-latest'
        run: printenv

  deploy:
    runs-on: [ubuntu-latest]
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    needs: test
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements_dev.txt
      - name: Build dist
        run: |
          python setup.py sdist bdist_wheel

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
          repository_url: https://test.pypi.org/legacy/
